C:\Users\tharu>jshell
|  Welcome to JShell -- Version 22.0.1
|  For an introduction type: /help intro

jshell> 5*10
$1 ==> 50

jshell> /exit
|  Goodbye

C:\Users\tharu>jshell
|  Welcome to JShell -- Version 22.0.1
|  For an introduction type: /help intro

jshell> /help
|  Type a Java language expression, statement, or declaration.
|  Or type one of the following commands:
|  /list [<name or id>|-all|-start]
|       list the source you have typed
|  /edit <name or id>
|       edit a source entry
|  /drop <name or id>
|       delete a source entry
|  /save [-all|-history|-start] <file>
|       Save snippet source to a file
|  /open <file>
|       open a file as source input
|  /vars [<name or id>|-all|-start]
|       list the declared variables and their values
|  /methods [<name or id>|-all|-start]
|       list the declared methods and their signatures
|  /types [<name or id>|-all|-start]
|       list the type declarations
|  /imports
|       list the imported items
|  /exit [<integer-expression-snippet>]
|       exit the jshell tool
|  /env [-class-path <path>] [-module-path <path>] [-add-modules <modules>] ...
|       view or change the evaluation context
|  /reset [-class-path <path>] [-module-path <path>] [-add-modules <modules>]...
|       reset the jshell tool
|  /reload [-restore] [-quiet] [-class-path <path>] [-module-path <path>]...
|       reset and replay relevant history -- current or previous (-restore)
|  /history [-all]
|       history of what you have typed
|  /help [<command>|<subject>]
|       get information about using the jshell tool
|  /set editor|start|feedback|mode|prompt|truncation|format ...
|       set configuration information
|  /? [<command>|<subject>]
|       get information about using the jshell tool
|  /!
|       rerun last snippet -- see /help rerun
|  /<id>
|       rerun snippets by ID or ID range -- see /help rerun
|  /-<n>
|       rerun n-th previous snippet -- see /help rerun
|
|  For more information type '/help' followed by the name of a
|  command or a subject.
|  For example '/help /list' or '/help intro'.
|
|  Subjects:
|
|  intro
|       an introduction to the jshell tool
|  keys
|       a description of readline-like input editing
|  id
|       a description of snippet IDs and how use them
|  shortcuts
|       a description of keystrokes for snippet and command completion,
|       information access, and automatic code generation
|  context
|       a description of the evaluation context options for /env /reload and /reset
|  rerun
|       a description of ways to re-evaluate previously entered snippets

jshell> 5*%
   ...> 5
|  Error:
|  illegal start of expression
|  5*%
|    ^

jshell> 5*%
   ...> 5
|  Error:
|  illegal start of expression
|  5*%
|    ^

jshell> 5*5
$1 ==> 25

jshell> 60*24
$2 ==> 1440

jshell> 24*60*60
$3 ==> 86400

jshell> 5/2
$4 ==> 2

jshell> 5//2
$5 ==> 5

jshell> 5/2.0
$6 ==> 2.5

jshell> 5.0/2
$7 ==> 2.5

jshell> System.out.println(3*4);
12

jshell> System.out.println("3*4=",3*4);
|  Error:
|  no suitable method found for println(java.lang.String,int)
|      method java.io.PrintStream.println() is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(boolean) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(char) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(int) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(long) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(float) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(double) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(char[]) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(java.lang.String) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.io.PrintStream.println(java.lang.Object) is not applicable
|        (actual and formal argument lists differ in length)
|  System.out.println("3*4=",3*4);
|  ^----------------^

jshell> System.out.println("3*4=12");
3*4=12

jshell> System.out.println("3*4="+3*4);
3*4=12

jshell> Math.random();
$11 ==> 0.4525647525448374

jshell> Math.random();
$12 ==> 0.9715172194277434

jshell> Math.random();
$13 ==> 0.4617582703863149

jshell> Math.min(45,22,189);
|  Error:
|  no suitable method found for min(int,int,int)
|      method java.lang.Math.min(int,int) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.lang.Math.min(long,long) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.lang.Math.min(float,float) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.lang.Math.min(double,double) is not applicable
|        (actual and formal argument lists differ in length)
|  Math.min(45,22,189);
|  ^------^

jshell> Math.min(45,22);
$14 ==> 22

jshell> Math.min(45,22,18);
|  Error:
|  no suitable method found for min(int,int,int)
|      method java.lang.Math.min(int,int) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.lang.Math.min(long,long) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.lang.Math.min(float,float) is not applicable
|        (actual and formal argument lists differ in length)
|      method java.lang.Math.min(double,double) is not applicable
|        (actual and formal argument lists differ in length)
|  Math.min(45,22,18);
|  ^------^

jshell> i=10;j=20;
|  Error:
|  cannot find symbol
|    symbol:   variable i
|  i=10;
|  ^

jshell> int i=10;int j=20;
i ==> 10
j ==> 20

jshell> System.out.printf("3*4=12");
3*4=12$17 ==> java.io.PrintStream@5abca1e0

jshell> System.out.printf("3*4=12").println();
3*4=12

jshell> System.out.printf("3*4=%d", 3*4).println();
3*4=12

jshell> System.out.printf("%d*%d=%d", 3,4,3*4).println();
3*4=12

jshell> System.out.printf("%d", "jaya").println();
|  Exception java.util.IllegalFormatConversionException: d != java.lang.String
|        at Formatter$FormatSpecifier.failConversion (Formatter.java:4534)
|        at Formatter$FormatSpecifier.printInteger (Formatter.java:3072)
|        at Formatter$FormatSpecifier.print (Formatter.java:3027)
|        at Formatter.format (Formatter.java:2797)
|        at PrintStream.implFormat (PrintStream.java:1367)
|        at PrintStream.format (PrintStream.java:1346)
|        at PrintStream.printf (PrintStream.java:1245)
|        at (#21:1)

jshell> System.out.printf("%s", "jaya").println();
jaya

jshell> x=5;
|  Error:
|  cannot find symbol
|    symbol:   variable x
|  x=5;
|  ^

jshell> int x=5;
x ==> 5

jshell> int number = 10;
number ==> 10

jshell> int result=0;
result ==> 0

jshell> for(int i=0;i<=number;i++)
   ...> {
   ...>     System.out.println(x+"X"+i+"="+x*i)
   ...> }
|  Error:
|  ';' expected
|      System.out.println(x+"X"+i+"="+x*i)
|                                         ^

jshell> for(int i=0;i<=number;i++)
   ...> {
   ...>     System.out.println(x+"X"+i+"="+x*i);
   ...> }
5X0=0
5X1=5
5X2=10
5X3=15
5X4=20
5X5=25
5X6=30
5X7=35
5X8=40
5X9=45
5X10=50